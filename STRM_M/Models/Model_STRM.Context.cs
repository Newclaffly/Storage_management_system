//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STRM_M.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class STRMEntities : DbContext
    {
        public STRMEntities()
            : base("name=STRMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_biz> tb_biz { get; set; }
        public virtual DbSet<tb_cord_image> tb_cord_image { get; set; }
        public virtual DbSet<tb_flag> tb_flag { get; set; }
        public virtual DbSet<tb_status> tb_status { get; set; }
        public virtual DbSet<tb_storage_auto_trackin> tb_storage_auto_trackin { get; set; }
        public virtual DbSet<tb_storage_information> tb_storage_information { get; set; }
        public virtual DbSet<tb_stroage_condition> tb_stroage_condition { get; set; }
        public virtual DbSet<tb_temp_maual_data> tb_temp_maual_data { get; set; }
        public virtual DbSet<tb_transaction> tb_transaction { get; set; }
        public virtual DbSet<tb_type_storage> tb_type_storage { get; set; }
        public virtual DbSet<tb_type_storage_format> tb_type_storage_format { get; set; }
        public virtual DbSet<tb_type_tran> tb_type_tran { get; set; }
        public virtual DbSet<sdt_member> sdt_member { get; set; }
    
        public virtual ObjectResult<sp_fillter_material_Result> sp_fillter_material()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_fillter_material_Result>("sp_fillter_material");
        }
    
        public virtual ObjectResult<sp_display_storage_inf_Result> sp_display_storage_inf()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_storage_inf_Result>("sp_display_storage_inf");
        }
    
        public virtual int sp_register_tran(string lOT_NO, string pART_CODE, Nullable<double> qTY, Nullable<int> tYPE_SYSTEM_ID, Nullable<int> tYPE_TRAN_ID, Nullable<int> lOC_ID, string cREATE_BY, string rEGISTER_BY)
        {
            var lOT_NOParameter = lOT_NO != null ?
                new ObjectParameter("LOT_NO", lOT_NO) :
                new ObjectParameter("LOT_NO", typeof(string));
    
            var pART_CODEParameter = pART_CODE != null ?
                new ObjectParameter("PART_CODE", pART_CODE) :
                new ObjectParameter("PART_CODE", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(double));
    
            var tYPE_SYSTEM_IDParameter = tYPE_SYSTEM_ID.HasValue ?
                new ObjectParameter("TYPE_SYSTEM_ID", tYPE_SYSTEM_ID) :
                new ObjectParameter("TYPE_SYSTEM_ID", typeof(int));
    
            var tYPE_TRAN_IDParameter = tYPE_TRAN_ID.HasValue ?
                new ObjectParameter("TYPE_TRAN_ID", tYPE_TRAN_ID) :
                new ObjectParameter("TYPE_TRAN_ID", typeof(int));
    
            var lOC_IDParameter = lOC_ID.HasValue ?
                new ObjectParameter("LOC_ID", lOC_ID) :
                new ObjectParameter("LOC_ID", typeof(int));
    
            var cREATE_BYParameter = cREATE_BY != null ?
                new ObjectParameter("CREATE_BY", cREATE_BY) :
                new ObjectParameter("CREATE_BY", typeof(string));
    
            var rEGISTER_BYParameter = rEGISTER_BY != null ?
                new ObjectParameter("REGISTER_BY", rEGISTER_BY) :
                new ObjectParameter("REGISTER_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_register_tran", lOT_NOParameter, pART_CODEParameter, qTYParameter, tYPE_SYSTEM_IDParameter, tYPE_TRAN_IDParameter, lOC_IDParameter, cREATE_BYParameter, rEGISTER_BYParameter);
        }
    
        public virtual int sp_take_out_tran(string lOT_NO, string pART_CODE, Nullable<double> qTY, Nullable<int> tYPE_SYSTEM_ID, Nullable<int> tYPE_TRAN_ID, Nullable<int> lOC_ID, string cREATE_BY, string tAKE_OUT_BY)
        {
            var lOT_NOParameter = lOT_NO != null ?
                new ObjectParameter("LOT_NO", lOT_NO) :
                new ObjectParameter("LOT_NO", typeof(string));
    
            var pART_CODEParameter = pART_CODE != null ?
                new ObjectParameter("PART_CODE", pART_CODE) :
                new ObjectParameter("PART_CODE", typeof(string));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(double));
    
            var tYPE_SYSTEM_IDParameter = tYPE_SYSTEM_ID.HasValue ?
                new ObjectParameter("TYPE_SYSTEM_ID", tYPE_SYSTEM_ID) :
                new ObjectParameter("TYPE_SYSTEM_ID", typeof(int));
    
            var tYPE_TRAN_IDParameter = tYPE_TRAN_ID.HasValue ?
                new ObjectParameter("TYPE_TRAN_ID", tYPE_TRAN_ID) :
                new ObjectParameter("TYPE_TRAN_ID", typeof(int));
    
            var lOC_IDParameter = lOC_ID.HasValue ?
                new ObjectParameter("LOC_ID", lOC_ID) :
                new ObjectParameter("LOC_ID", typeof(int));
    
            var cREATE_BYParameter = cREATE_BY != null ?
                new ObjectParameter("CREATE_BY", cREATE_BY) :
                new ObjectParameter("CREATE_BY", typeof(string));
    
            var tAKE_OUT_BYParameter = tAKE_OUT_BY != null ?
                new ObjectParameter("TAKE_OUT_BY", tAKE_OUT_BY) :
                new ObjectParameter("TAKE_OUT_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_take_out_tran", lOT_NOParameter, pART_CODEParameter, qTYParameter, tYPE_SYSTEM_IDParameter, tYPE_TRAN_IDParameter, lOC_IDParameter, cREATE_BYParameter, tAKE_OUT_BYParameter);
        }
    
        public virtual ObjectResult<sp_hold_tracking_Result> sp_hold_tracking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_hold_tracking_Result>("sp_hold_tracking");
        }
    
        public virtual ObjectResult<sp_hold_tracking_summary_Result> sp_hold_tracking_summary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_hold_tracking_summary_Result>("sp_hold_tracking_summary");
        }
    
        public virtual ObjectResult<sp_display_storage_decode_Result> sp_display_storage_decode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_display_storage_decode_Result>("sp_display_storage_decode");
        }
    
        public virtual ObjectResult<sp_login_axis_Result> sp_login_axis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_login_axis_Result>("sp_login_axis");
        }
    
        public virtual int sp_update_takeout_finding(Nullable<int> tRAN_ID, Nullable<int> tYPE_TRAN_ID, string tAKE_OUT_BY)
        {
            var tRAN_IDParameter = tRAN_ID.HasValue ?
                new ObjectParameter("TRAN_ID", tRAN_ID) :
                new ObjectParameter("TRAN_ID", typeof(int));
    
            var tYPE_TRAN_IDParameter = tYPE_TRAN_ID.HasValue ?
                new ObjectParameter("TYPE_TRAN_ID", tYPE_TRAN_ID) :
                new ObjectParameter("TYPE_TRAN_ID", typeof(int));
    
            var tAKE_OUT_BYParameter = tAKE_OUT_BY != null ?
                new ObjectParameter("TAKE_OUT_BY", tAKE_OUT_BY) :
                new ObjectParameter("TAKE_OUT_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_takeout_finding", tRAN_IDParameter, tYPE_TRAN_IDParameter, tAKE_OUT_BYParameter);
        }
    
        public virtual int sp_report_finding_takein()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_report_finding_takein");
        }
    }
}
